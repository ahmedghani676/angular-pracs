{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class AppComponent {}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 54,\n  vars: 0,\n  consts: [[1, \"card\", \"m-3\"], [1, \"card-header\"], [1, \"card-body\"], [\"name\", \"form\"], [1, \"form-row\"], [1, \"form-group\", \"col\"], [\"name\", \"title\", 1, \"form-control\"], [\"value\", \"\"], [\"value\", \"Mr\"], [\"value\", \"Mrs\"], [\"value\", \"Miss\"], [\"value\", \"Ms\"], [1, \"form-group\", \"col-5\"], [\"type\", \"text\", \"name\", \"firstName\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"lastName\", 1, \"form-control\"], [\"type\", \"date\", \"name\", \"dob\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"email\", 1, \"form-control\"], [\"type\", \"password\", \"name\", \"password\", 1, \"form-control\"], [\"type\", \"password\", \"name\", \"confirmPassword\", 1, \"form-control\"], [1, \"form-group\", \"form-check\"], [\"type\", \"checkbox\", \"name\", \"acceptTerms\", \"id\", \"acceptTerms\", 1, \"form-check-input\"], [\"for\", \"acceptTerms\", 1, \"form-check-label\"], [1, \"text-center\"], [1, \"btn\", \"btn-primary\", \"mr-1\"], [\"type\", \"reset\", 1, \"btn\", \"btn-secondary\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h5\", 1);\n      i0.ɵɵtext(2, \"Angular Reactive driven form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"label\");\n      i0.ɵɵtext(8, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"select\", 6);\n      i0.ɵɵelement(10, \"option\", 7);\n      i0.ɵɵelementStart(11, \"option\", 8);\n      i0.ɵɵtext(12, \"Mr\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"option\", 9);\n      i0.ɵɵtext(14, \"Mrs\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"option\", 10);\n      i0.ɵɵtext(16, \"Miss\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"option\", 11);\n      i0.ɵɵtext(18, \"Ms\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 12)(20, \"label\");\n      i0.ɵɵtext(21, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 12)(24, \"label\");\n      i0.ɵɵtext(25, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 4)(28, \"div\", 5)(29, \"label\");\n      i0.ɵɵtext(30, \"Date of Birth\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"div\", 5)(33, \"label\");\n      i0.ɵɵtext(34, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"input\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"div\", 4)(37, \"div\", 5)(38, \"label\");\n      i0.ɵɵtext(39, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(40, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"div\", 5)(42, \"label\");\n      i0.ɵɵtext(43, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(44, \"input\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(45, \"div\", 19);\n      i0.ɵɵelement(46, \"input\", 20);\n      i0.ɵɵelementStart(47, \"label\", 21);\n      i0.ɵɵtext(48, \"Accept Terms & Conditions\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(49, \"div\", 22)(50, \"button\", 23);\n      i0.ɵɵtext(51, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"button\", 24);\n      i0.ɵɵtext(53, \"Cancel\");\n      i0.ɵɵelementEnd()()()()();\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.NgControlStatusGroup],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["AppComponent","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Users\\Ahmed Ghani\\Todo\\my-angular-app\\src\\app\\app.component.ts","C:\\Users\\Ahmed Ghani\\Todo\\my-angular-app\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder }\n  from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  // myform: FormGroup = new FormGroup({})\n\n\n  // constructor(private fb: FormBuilder) { }\n\n\n\n  // createForm() {\n  //   this.myform = this.fb.group({\n  //     title: new FormControl('', [Validators.required, Validators.minLength(6)]),\n  //     priority: new FormControl(null, [Validators.required]),\n  //     done: new FormControl(\"\", [Validators.required, Validators.minLength(6)])\n  //   });\n  // }\n\n  // demo() {\n  //   this.title\n  //   debugger;\n  // }\n\n  // get title() {\n  //   return this.myform.get('title') as FormControl\n  // }\n\n  // get priority() {\n  //   return this.myform.get('priority') as FormControl\n  // }\n\n  // get done() {\n  //   return this.myform.get('done') as FormControl\n  // }\n\n\n\n\n\n\n\n  // ngOnInit() {\n  //   this.createForm();\n  // }\n\n\n\n\n\n\n  // name = 'TodoList App';\n  // todos = [\n  //   {\n\n  //     title: 'birthday',\n  //     done: false,\n  //     priority: 3\n  //   },\n\n  //   {\n  //     title: 'birthda1',\n  //     done: false,\n  //     priority: 3\n  //   },\n\n  //   {\n\n  //     title: 'birty',\n  //     done: false,\n  //     priority: 3\n  //   }\n\n  // ];\n\n  // addTodo() {\n  //   debugger\n  //   const index = this.todos.findIndex(t => t.title === this.myform.value.title);\n  //   if (index !== -1) {\n  //     var newTodo = {\n  //       title: this.myform.value.title,\n\n  //       done: this.myform.value.done,\n  //       priority: this.myform.value.priority,\n  //     };\n  //     this.todos[index] = newTodo;\n  //   }\n  //   else {\n  //     var newTodo = {\n  //       title: this.myform.value.title,\n\n  //       done: this.myform.value.done,\n  //       priority: this.myform.value.priority,\n  //     };\n  //     this.todos.push(newTodo);\n  //   }\n\n\n  // }\n\n  // deleteTodo(todo: any) {\n\n  //   this.todos = this.todos.filter(t => t.title !== todo.title);\n  // }\n  // UpdateTodo(todo: any) {\n  //   this.myform.value.title = todo.title;\n  //   this.myform.value.priority = todo.priority;\n  //   this.myform.value.done = todo.done;\n  // }\n\n  // onSubmit() {\n  //   console.log(this.myform?.value)\n  //   this.myform.markAllAsTouched()\n  //   this.addTodo()\n  // }\n\n\n}\n","<!-- <app-navbar></app-navbar>\n<h1>{{name}}</h1>\n\n\n<form [formGroup]=\"myform\">\n  <div>\n    <label>Title:</label>\n    <input type=\"text\" formControlName=\"title\" required minlength=\"6\">\n    <div *ngIf=\"isSubmit && title.errors && !title.pristine && title.touched\">\n      <span *ngIf=\"title.errors['required']\"> Title is Required </span>\n      <span *ngIf=\"title.errors['minlength']\"> Min length should be 6 chars</span>\n    </div>\n  </div>\n  \n  <label>Priority:</label>\n  <input type=\"text\" formControlName=\"priority\" required>\n\n\n  <label>Done:</label>\n  <input type=\"text\" formControlName=\"done\" required>{{title.errors | json}}\n  <div *ngIf=\"title.errors['required']\">\n    Required Done\n    <div *ngIf=\"myform.value.done.errors?.['required']\">\n      Name is required.\n    </div>\n    <div *ngIf=\"done.errors?.['minlength']\">\n      Name must be at least 4 characters long.\n    </div>\n     \n  </div>\n\n  <p>\n    <button type=\"button\" [disabled]=\"myform.invalid\" (click)=\"addTodo()\">Submit</button>\n  </p>\n</form> -->\n\n\n<!-- <table>\n\n  <tr>\n    <th>Title</th>\n    <th>Priority</th>\n    <th>Done</th>\n    <th>Actions</th>\n  </tr>\n  <tr *ngFor=\"let todo of todos\">\n    debugger\n    <td>{{todo.title}}</td>\n    <td>{{todo.priority}}</td>\n    <td>{{todo.done ? '&#10003;' : '&#10005;'}}</td>\n    <td>\n      <button (click)=\"deleteTodo(todo)\"> Delete</button>\n      <button (click)=\"UpdateTodo(todo)\"> Update</button>\n    </td>\n  </tr>\n</table> -->\n\n<!-- main app container -->\n<div class=\"card m-3\">\n  <h5 class=\"card-header\">Angular Reactive driven form</h5>\n  <div class=\"card-body\">\n      <form name=\"form\">\n          <div class=\"form-row\">\n              <div class=\"form-group col\">\n                  <label>Title</label>\n                  <select name=\"title\" class=\"form-control\" >\n                      <option value=\"\"></option>\n                      <option value=\"Mr\">Mr</option>\n                      <option value=\"Mrs\">Mrs</option>\n                      <option value=\"Miss\">Miss</option>\n                      <option value=\"Ms\">Ms</option>\n                  </select>\n                  <!-- <div *ngIf=\"\" class=\"\">\n                      <div *ngIf=\"\">Title is required</div>\n                  </div> -->\n              </div>\n              <div class=\"form-group col-5\">\n                  <label>First Name</label>\n                  <input type=\"text\" name=\"firstName\" class=\"form-control\" >\n                  <!-- <div *ngIf=\"\" class=\"\">\n                      <div *ngIf=\"\">First Name is required</div>\n                  </div> -->\n              </div>\n              <div class=\"form-group col-5\">\n                  <label>Last Name</label>\n                  <input type=\"text\" name=\"lastName\" class=\"form-control\" >\n                  <!-- <div *ngIf=\"f.submitted && lastName.invalid\" class=\"invalid-feedback\">\n                      <div *ngIf=\"lastName.errors.required\">Last Name is required</div>\n                  </div> -->\n              </div>\n          </div>\n          <div class=\"form-row\">\n              <div class=\"form-group col\">\n                  <label>Date of Birth</label>\n                  <input type=\"date\" name=\"dob\" class=\"form-control\">\n                  <!-- <div *ngIf=\"f.submitted && dob.invalid\" class=\"invalid-feedback\">\n                      <div *ngIf=\"dob.errors.required\">Date of Birth is required</div>\n                      <div *ngIf=\"dob.errors.pattern\">Date of Birth must be a valid date in the format YYYY-MM-DD</div>\n                  </div> -->\n              </div>\n              <div class=\"form-group col\">\n                  <label>Email</label>\n                  <input type=\"text\" name=\"email\" class=\"form-control\" >\n                  <!-- <div *ngIf=\"f.submitted && email.invalid\" class=\"invalid-feedback\">\n                      <div *ngIf=\"email.errors.required\">Email is required</div>\n                      <div *ngIf=\"email.errors.email\">Email must be a valid email address</div>\n                  </div> -->\n              </div>\n          </div>\n          <div class=\"form-row\">\n              <div class=\"form-group col\">\n                  <label>Password</label>\n                  <input type=\"password\" name=\"password\" class=\"form-control\" >\n                  <!-- <div *ngIf=\"f.submitted && password.invalid\" class=\"invalid-feedback\">\n                      <div *ngIf=\"password.errors.required\">Password is required</div>\n                      <div *ngIf=\"password.errors.minlength\">Password must be at least 6 characters</div>\n                  </div> -->\n              </div>\n              <div class=\"form-group col\">\n                  <label>Confirm Password</label>\n                  <input type=\"password\" name=\"confirmPassword\" class=\"form-control\" >\n                  <!-- <div *ngIf=\"f.submitted && confirmPassword.invalid\" class=\"invalid-feedback\">\n                      <div *ngIf=\"confirmPassword.errors.required\">Confirm Password is required</div>\n                      <div *ngIf=\"confirmPassword.errors.mustMatch\">Passwords must match</div>\n                  </div> -->\n              </div>\n          </div>\n          <div class=\"form-group form-check\">\n              <input type=\"checkbox\" name=\"acceptTerms\" id=\"acceptTerms\" class=\"form-check-input\" >\n              <label for=\"acceptTerms\" class=\"form-check-label\">Accept Terms & Conditions</label>\n              <!-- <div *ngIf=\"f.submitted && acceptTerms.invalid\" class=\"invalid-feedback\">Accept Ts & Cs is required</div> -->\n          </div>\n          <div class=\"text-center\">\n              <button class=\"btn btn-primary mr-1\">Register</button>\n              <button class=\"btn btn-secondary\" type=\"reset\">Cancel</button>\n          </div>\n      </form>\n  </div>\n</div>\n\n"],"mappings":";;AASA,OAAM,MAAOA,YAAY;AAAZA,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;QAAZA,YAAY;EAAAC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCiDzBE,EAAA,CAAAC,cAAA,aAAsB;MACID,EAAA,CAAAE,MAAA,mCAA4B;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACzDH,EAAA,CAAAC,cAAA,aAAuB;MAIAD,EAAA,CAAAE,MAAA,YAAK;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACpBH,EAAA,CAAAC,cAAA,gBAA2C;MACvCD,EAAA,CAAAI,SAAA,iBAA0B;MAC1BJ,EAAA,CAAAC,cAAA,iBAAmB;MAAAD,EAAA,CAAAE,MAAA,UAAE;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAC9BH,EAAA,CAAAC,cAAA,iBAAoB;MAAAD,EAAA,CAAAE,MAAA,WAAG;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAChCH,EAAA,CAAAC,cAAA,kBAAqB;MAAAD,EAAA,CAAAE,MAAA,YAAI;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAClCH,EAAA,CAAAC,cAAA,kBAAmB;MAAAD,EAAA,CAAAE,MAAA,UAAE;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAMtCH,EAAA,CAAAC,cAAA,eAA8B;MACnBD,EAAA,CAAAE,MAAA,kBAAU;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACzBH,EAAA,CAAAI,SAAA,iBAA0D;MAI9DJ,EAAA,CAAAG,YAAA,EAAM;MACNH,EAAA,CAAAC,cAAA,eAA8B;MACnBD,EAAA,CAAAE,MAAA,iBAAS;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACxBH,EAAA,CAAAI,SAAA,iBAAyD;MAI7DJ,EAAA,CAAAG,YAAA,EAAM;MAEVH,EAAA,CAAAC,cAAA,cAAsB;MAEPD,EAAA,CAAAE,MAAA,qBAAa;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAC5BH,EAAA,CAAAI,SAAA,iBAAmD;MAKvDJ,EAAA,CAAAG,YAAA,EAAM;MACNH,EAAA,CAAAC,cAAA,cAA4B;MACjBD,EAAA,CAAAE,MAAA,aAAK;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACpBH,EAAA,CAAAI,SAAA,iBAAsD;MAK1DJ,EAAA,CAAAG,YAAA,EAAM;MAEVH,EAAA,CAAAC,cAAA,cAAsB;MAEPD,EAAA,CAAAE,MAAA,gBAAQ;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACvBH,EAAA,CAAAI,SAAA,iBAA6D;MAKjEJ,EAAA,CAAAG,YAAA,EAAM;MACNH,EAAA,CAAAC,cAAA,cAA4B;MACjBD,EAAA,CAAAE,MAAA,wBAAgB;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAC/BH,EAAA,CAAAI,SAAA,iBAAoE;MAKxEJ,EAAA,CAAAG,YAAA,EAAM;MAEVH,EAAA,CAAAC,cAAA,eAAmC;MAC/BD,EAAA,CAAAI,SAAA,iBAAqF;MACrFJ,EAAA,CAAAC,cAAA,iBAAkD;MAAAD,EAAA,CAAAE,MAAA,iCAAyB;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAGvFH,EAAA,CAAAC,cAAA,eAAyB;MACgBD,EAAA,CAAAE,MAAA,gBAAQ;MAAAF,EAAA,CAAAG,YAAA,EAAS;MACtDH,EAAA,CAAAC,cAAA,kBAA+C;MAAAD,EAAA,CAAAE,MAAA,cAAM;MAAAF,EAAA,CAAAG,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}