{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./form/form.component\";\nexport class AppComponent {\n  constructor(fb) {\n    this.fb = fb;\n    // todo ={}\n    // todos=[]\n    // addItem(newItem: []) {\n    //   this.todos.push(newItem);\n    //   console.log(this.todos)\n    // }\n    // addItems(todo: {}) {\n    //  this.todo = todo\n    //   console.log(this.todo)\n    // }\n    //  @Output() newItemEvent = new EventEmitter<object>();\n    // @Input() todo:{};\n    this.myform = new FormGroup({});\n    this.submitted = false;\n    this.todos = [];\n  }\n  identityRevealedValidator(passwords) {\n    return control => {\n      const password = control.parent?.get(passwords)?.value;\n      const confirmPassword = control?.value;\n      if (password !== confirmPassword) {\n        return {\n          passwordMismatch: true\n        };\n      }\n      return null;\n    };\n  }\n  createForm() {\n    this.myform = this.fb.group({\n      title: new FormControl('', [Validators.required]),\n      firstName: new FormControl('', [Validators.required, Validators.minLength(8)]),\n      lastName: new FormControl('', [Validators.required, Validators.minLength(8)]),\n      dob: new FormControl('', [Validators.required]),\n      email: new FormControl(\"\", [Validators.required, Validators.minLength(8)]),\n      password: new FormControl(\"\", [Validators.required, Validators.minLength(8)]),\n      confirmPassword: new FormControl(\"\", [Validators.required, this.identityRevealedValidator('password')]),\n      acceptTerms: new FormControl(\"\", [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.createForm();\n  }\n  get title() {\n    return this.myform.get('title');\n  }\n  get firstName() {\n    return this.myform.get('firstName');\n  }\n  get lastName() {\n    return this.myform.get('lastName');\n  }\n  get dob() {\n    return this.myform.get('dob');\n  }\n  get email() {\n    return this.myform.get('email');\n  }\n  get password() {\n    return this.myform.get('password');\n  }\n  get confirmPassword() {\n    return this.myform.get('confirmPassword');\n  }\n  get acceptTerms() {\n    return this.myform.get('acceptTerms');\n  }\n  // addNewItem(todos:object) {\n  //   this.newItemEvent.emit(todos);\n  // }\n  addTodo() {\n    //  const index=-1;\n    // if (index !== -1) {\n    //   var newTodo = {\n    //     title: this.myform.value.title,\n    //     firstName: this.myform.value.firstName,\n    //     lastName: this.myform.value.lastName,\n    //     dob: this.myform.value.dob,\n    //     email: this.myform.value.email,\n    //     password: this.myform.value.password,\n    //     confirmPassword: this.myform.value.confirmPassword\n    //   };\n    //   this.todos[index] = newTodo;\n    // }\n    var newTodo = {\n      title: this.myform.value.title,\n      firstName: this.myform.value.firstName,\n      lastName: this.myform.value.lastName,\n      dob: this.myform.value.dob,\n      email: this.myform.value.email,\n      password: this.myform.value.password,\n      confirmPassword: this.myform.value.confirmPassword\n    };\n    this.todos.push(newTodo);\n    // this.addNewItem(newTodo)\n    this.myform.reset();\n    this.submitted = false;\n  }\n  onSubmit() {\n    debugger;\n    this.submitted = true;\n    if (this.myform.valid) {\n      //   const formData = this.myform.value;\n      this.addTodo();\n    }\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 12,\n  vars: 0,\n  consts: [[\"routerLink\", \"child-as\"], [\"routerLink\", \"child-bs\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"First Component\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"nav\")(3, \"ul\")(4, \"li\")(5, \"a\", 0);\n      i0.ɵɵtext(6, \"Child A\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"li\")(8, \"a\", 1);\n      i0.ɵɵtext(9, \"Child B\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(10, \"router-outlet\")(11, \"app-form\");\n    }\n  },\n  dependencies: [i2.RouterOutlet, i2.RouterLink, i3.FormComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormGroup","FormControl","Validators","AppComponent","constructor","fb","myform","submitted","todos","identityRevealedValidator","passwords","control","password","parent","get","value","confirmPassword","passwordMismatch","createForm","group","title","required","firstName","minLength","lastName","dob","email","acceptTerms","ngOnInit","addTodo","newTodo","push","reset","onSubmit","valid","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Users\\Ahmed Ghani\\Todo\\my-angular-app\\src\\app\\app.component.ts","C:\\Users\\Ahmed Ghani\\Todo\\my-angular-app\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder, ValidationErrors, ValidatorFn, AbstractControl }\n  from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit{\n\n  // todo ={}\n\n  // todos=[]\n\n  // addItem(newItem: []) {\n  //   this.todos.push(newItem);\n  //   console.log(this.todos)\n  // }\n  // addItems(todo: {}) {\n  //  this.todo = todo\n  //   console.log(this.todo)\n  // }\n   //  @Output() newItemEvent = new EventEmitter<object>();\n  // @Input() todo:{};\n  myform: FormGroup = new FormGroup({});\n  submitted = false;\n  todos=[];\n  constructor(private fb: FormBuilder) { }\n  identityRevealedValidator(passwords: string): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n\n      const password = control.parent?.get(passwords)?.value;\n      const confirmPassword = control?.value;\n\n      if (password !== confirmPassword) {\n        return { passwordMismatch: true };\n      }\n\n      return null;\n    };\n  }\n  createForm() {\n    this.myform = this.fb.group({\n\n      title: new FormControl('', [Validators.required]),\n      firstName: new FormControl('', [Validators.required, Validators.minLength(8)]),\n      lastName: new FormControl('', [Validators.required, Validators.minLength(8)]),\n      dob: new FormControl('', [Validators.required]),\n      email: new FormControl(\"\", [Validators.required, Validators.minLength(8)]),\n      password: new FormControl(\"\", [Validators.required, Validators.minLength(8)]),\n      confirmPassword: new FormControl(\"\", [Validators.required, this.identityRevealedValidator('password')]),\n      acceptTerms: new FormControl(\"\", [Validators.required])\n\n    });\n  }\n\n\n  ngOnInit() {\n    this.createForm();\n  }\n  get title(): FormControl {\n\n    return this.myform.get('title') as FormControl\n  }\n  get firstName() {\n    return this.myform.get('firstName') as FormControl\n  }\n  get lastName() {\n    return this.myform.get('lastName') as FormControl\n  }\n  get dob() {\n    return this.myform.get('dob') as FormControl\n  }\n  get email() {\n    return this.myform.get('email') as FormControl\n  }\n  get password() {\n    return this.myform.get('password') as FormControl\n  }\n  get confirmPassword() {\n    return this.myform.get('confirmPassword') as FormControl\n  }\n  get acceptTerms() {\n    return this.myform.get('acceptTerms') as FormControl\n  }\n  // addNewItem(todos:object) {\n  //   this.newItemEvent.emit(todos);\n  // }\n  addTodo() {\n\n    //  const index=-1;\n    // if (index !== -1) {\n    //   var newTodo = {\n    //     title: this.myform.value.title,\n\n    //     firstName: this.myform.value.firstName,\n    //     lastName: this.myform.value.lastName,\n    //     dob: this.myform.value.dob,\n    //     email: this.myform.value.email,\n    //     password: this.myform.value.password,\n    //     confirmPassword: this.myform.value.confirmPassword\n    //   };\n    //   this.todos[index] = newTodo;\n    // }\n   \n    var newTodo = {\n      title: this.myform.value.title,\n      firstName: this.myform.value.firstName,\n      lastName: this.myform.value.lastName,\n      dob: this.myform.value.dob,\n      email: this.myform.value.email,\n      password: this.myform.value.password,\n      confirmPassword: this.myform.value.confirmPassword\n    };\n    this.todos.push(newTodo)\n    // this.addNewItem(newTodo)\n\n  this.myform.reset();\n  this.submitted = false \n\n\n  }\n \n \n  onSubmit() {\n    debugger\n    this.submitted = true;\n    if (this.myform.valid) {\n      //   const formData = this.myform.value;\n      this.addTodo();\n     \n    }\n    \n  }\n\n}\n\n\n","<h2>First Component</h2>\n\n<nav>\n  <ul>\n    <li><a routerLink=\"child-as\">Child A</a></li>\n    <li><a routerLink=\"child-bs\">Child B</a></li>\n  </ul>\n</nav>\n\n<router-outlet></router-outlet>\n\n<app-form > </app-form>\n\n\n\n\n\n\n\n\n\n\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}